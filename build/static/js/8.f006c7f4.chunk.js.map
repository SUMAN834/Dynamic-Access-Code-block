{"version":3,"file":"static/js/8.f006c7f4.chunk.js","mappings":"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","sources":["../node_modules/@lit-protocol/auth-browser/node_modules/proxy-compare/src/index.ts","../node_modules/@lit-protocol/auth-browser/node_modules/valtio/esm/vanilla.mjs","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/ClientCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/AccountCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/OptionsCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/ConfigCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/utils/ExplorerUtil.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/ExplorerCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/RouterCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/ModalCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/ThemeCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/controllers/ToastCtrl.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/utils/CoreUtil.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/core/src/utils/PolyfillUtil.ts","../node_modules/@lit-protocol/auth-browser/node_modules/@web3modal/standalone/src/client.ts"],"sourcesContent":["// symbols\nconst TRACK_MEMO_SYMBOL = Symbol();\nconst GET_ORIGINAL_SYMBOL = Symbol();\n\n// properties\nconst AFFECTED_PROPERTY = 'a';\nconst IS_TARGET_COPIED_PROPERTY = 'f';\nconst PROXY_PROPERTY = 'p';\nconst PROXY_CACHE_PROPERTY = 'c';\nconst NEXT_OBJECT_PROPERTY = 'n';\nconst CHANGED_PROPERTY = 'g';\nconst HAS_KEY_PROPERTY = 'h';\nconst ALL_OWN_KEYS_PROPERTY = 'w';\nconst HAS_OWN_KEY_PROPERTY = 'o';\nconst KEYS_PROPERTY = 'k';\n\n// function to create a new bare proxy\nlet newProxy = <T extends object>(\n  target: T,\n  handler: ProxyHandler<T>,\n) => new Proxy(target, handler);\n\n// get object prototype\nconst getProto = Object.getPrototypeOf;\n\nconst objectsToTrack = new WeakMap<object, boolean>();\n\n// check if obj is a plain object or an array\nconst isObjectToTrack = <T>(obj: T): obj is T extends object ? T : never => (\n  obj && (objectsToTrack.has(obj as unknown as object)\n    ? objectsToTrack.get(obj as unknown as object) as boolean\n    : (getProto(obj) === Object.prototype || getProto(obj) === Array.prototype)\n  )\n);\n\n// check if it is object\nconst isObject = (x: unknown): x is object => (\n  typeof x === 'object' && x !== null\n);\n\n// Properties that are both non-configurable and non-writable will break\n// the proxy get trap when we try to return a recursive/child compare proxy\n// from them. We can avoid this by making a copy of the target object with\n// all descriptors marked as configurable, see `copyTargetObject`.\n// See: https://github.com/dai-shi/proxy-compare/pull/8\nconst needsToCopyTargetObject = (obj: object) => (\n  Object.values(Object.getOwnPropertyDescriptors(obj)).some(\n    (descriptor) => !descriptor.configurable && !descriptor.writable,\n  )\n);\n\n// Make a copy with all descriptors marked as configurable.\nconst copyTargetObject = <T extends object>(obj: T): T => {\n  if (Array.isArray(obj)) {\n    // Arrays need a special way to copy\n    return Array.from(obj) as T;\n  }\n  // For non-array objects, we create a new object keeping the prototype\n  // with changing all configurable options (otherwise, proxies will complain)\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  Object.values(descriptors).forEach((desc) => { desc.configurable = true; });\n  return Object.create(getProto(obj), descriptors);\n};\n\ntype HasKeySet = Set<string | symbol>\ntype HasOwnKeySet = Set<string | symbol>\ntype KeysSet = Set<string | symbol>\ntype Used = {\n  [HAS_KEY_PROPERTY]?: HasKeySet;\n  [ALL_OWN_KEYS_PROPERTY]?: true;\n  [HAS_OWN_KEY_PROPERTY]?: HasOwnKeySet;\n  [KEYS_PROPERTY]?: KeysSet;\n};\ntype Affected = WeakMap<object, Used>;\ntype ProxyHandlerState<T extends object> = {\n  readonly [IS_TARGET_COPIED_PROPERTY]: boolean;\n  [PROXY_PROPERTY]?: T;\n  [PROXY_CACHE_PROPERTY]?: ProxyCache<object> | undefined;\n  [AFFECTED_PROPERTY]?: Affected;\n}\ntype ProxyCache<T extends object> = WeakMap<\n  object,\n  readonly [ProxyHandler<T>, ProxyHandlerState<T>]\n>;\ntype TargetCache<T extends object> = WeakMap<\n  object,\n  readonly [target: T, copiedTarget?: T]\n>;\n\nconst createProxyHandler = <T extends object>(origObj: T, isTargetCopied: boolean) => {\n  const state: ProxyHandlerState<T> = {\n    [IS_TARGET_COPIED_PROPERTY]: isTargetCopied,\n  };\n  let trackObject = false; // for trackMemo\n  const recordUsage = (\n    type:\n      | typeof HAS_KEY_PROPERTY\n      | typeof ALL_OWN_KEYS_PROPERTY\n      | typeof HAS_OWN_KEY_PROPERTY\n      | typeof KEYS_PROPERTY,\n    key?: string | symbol,\n  ) => {\n    if (!trackObject) {\n      let used = (state[AFFECTED_PROPERTY] as Affected).get(origObj);\n      if (!used) {\n        used = {};\n        (state[AFFECTED_PROPERTY] as Affected).set(origObj, used);\n      }\n      if (type === ALL_OWN_KEYS_PROPERTY) {\n        used[ALL_OWN_KEYS_PROPERTY] = true;\n      } else {\n        let set = used[type];\n        if (!set) {\n          set = new Set();\n          used[type] = set;\n        }\n        set.add(key as string | symbol);\n      }\n    }\n  };\n  const recordObjectAsUsed = () => {\n    trackObject = true;\n    (state[AFFECTED_PROPERTY] as Affected).delete(origObj);\n  };\n  const handler: ProxyHandler<T> = {\n    get(target, key) {\n      if (key === GET_ORIGINAL_SYMBOL) {\n        return origObj;\n      }\n      recordUsage(KEYS_PROPERTY, key);\n      return createProxy(\n        Reflect.get(target, key),\n        (state[AFFECTED_PROPERTY] as Affected),\n        state[PROXY_CACHE_PROPERTY],\n      );\n    },\n    has(target, key) {\n      if (key === TRACK_MEMO_SYMBOL) {\n        recordObjectAsUsed();\n        return true;\n      }\n      recordUsage(HAS_KEY_PROPERTY, key);\n      return Reflect.has(target, key);\n    },\n    getOwnPropertyDescriptor(target, key) {\n      recordUsage(HAS_OWN_KEY_PROPERTY, key);\n      return Reflect.getOwnPropertyDescriptor(target, key);\n    },\n    ownKeys(target) {\n      recordUsage(ALL_OWN_KEYS_PROPERTY);\n      return Reflect.ownKeys(target);\n    },\n  };\n  if (isTargetCopied) {\n    handler.set = handler.deleteProperty = () => false;\n  }\n  return [handler, state] as const;\n};\n\nconst getOriginalObject = <T extends object>(obj: T) => (\n  // unwrap proxy\n  (obj as { [GET_ORIGINAL_SYMBOL]?: typeof obj })[GET_ORIGINAL_SYMBOL]\n  // otherwise\n  || obj\n);\n\n/**\n * Create a proxy.\n *\n * This function will create a proxy at top level and proxy nested objects as you access them,\n * in order to keep track of which properties were accessed via get/has proxy handlers:\n *\n * NOTE: Printing of WeakMap is hard to inspect and not very readable\n * for this purpose you can use the `affectedToPathList` helper.\n *\n * @param {object} obj - Object that will be wrapped on the proxy.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that will hold the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [proxyCache] -\n * WeakMap that will help keep referential identity for proxies.\n * @returns {Proxy<object>} - Object wrapped in a proxy.\n *\n * @example\n * import { createProxy } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n * const proxy = createProxy(original, affected);\n *\n * proxy.a // Will mark as used and track its value.\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"a\"\n *\n * proxy.d // Will mark \"d\" as accessed to track and proxy itself ({ e: \"3\" }).\n * // This will update the affected WeakMap with original as key\n * // and a Set with \"d\"\n */\nexport const createProxy = <T>(\n  obj: T,\n  affected: WeakMap<object, unknown>,\n  proxyCache?: WeakMap<object, unknown>,\n  targetCache?: WeakMap<object, unknown>,\n): T => {\n  if (!isObjectToTrack(obj)) return obj;\n  let targetAndCopied = (\n    targetCache && (targetCache as TargetCache<typeof obj>).get(obj)\n  );\n  if (!targetAndCopied) {\n    const target = getOriginalObject(obj);\n    if (needsToCopyTargetObject(target)) {\n      targetAndCopied = [target, copyTargetObject(target)];\n    } else {\n      targetAndCopied = [target];\n    }\n    targetCache?.set(obj, targetAndCopied);\n  }\n  const [target, copiedTarget] = targetAndCopied;\n  let handlerAndState = (\n    proxyCache && (proxyCache as ProxyCache<typeof target>).get(target)\n  );\n  if (\n    !handlerAndState\n    || handlerAndState[1][IS_TARGET_COPIED_PROPERTY] !== !!copiedTarget\n  ) {\n    handlerAndState = createProxyHandler<typeof target>(target, !!copiedTarget);\n    handlerAndState[1][PROXY_PROPERTY] = newProxy(\n      copiedTarget || target,\n      handlerAndState[0],\n    );\n    if (proxyCache) {\n      proxyCache.set(target, handlerAndState);\n    }\n  }\n  handlerAndState[1][AFFECTED_PROPERTY] = affected as Affected;\n  handlerAndState[1][PROXY_CACHE_PROPERTY] = proxyCache as ProxyCache<object> | undefined;\n  return handlerAndState[1][PROXY_PROPERTY] as typeof target;\n};\n\nconst isAllOwnKeysChanged = (prevObj: object, nextObj: object) => {\n  const prevKeys = Reflect.ownKeys(prevObj);\n  const nextKeys = Reflect.ownKeys(nextObj);\n  return prevKeys.length !== nextKeys.length\n    || prevKeys.some((k, i) => k !== nextKeys[i]);\n};\n\ntype ChangedCache = WeakMap<object, {\n  [NEXT_OBJECT_PROPERTY]: object;\n  [CHANGED_PROPERTY]: boolean;\n}>;\n\n/**\n * Compare changes on objects.\n *\n * This will compare the affected properties on tracked objects inside the proxy\n * to check if there were any changes made to it,\n * by default if no property was accessed on the proxy it will attempt to do a\n * reference equality check for the objects provided (Object.is(a, b)). If you access a property\n * on the proxy, then isChanged will only compare the affected properties.\n *\n * @param {object} prevObj - The previous object to compare.\n * @param {object} nextObj - Object to compare with the previous one.\n * @param {WeakMap<object, unknown>} affected -\n * WeakMap that holds the tracking of which properties in the proxied object were accessed.\n * @param {WeakMap<object, unknown>} [cache] -\n * WeakMap that holds a cache of the comparisons for better performance with repetitive comparisons,\n * and to avoid infinite loop with circular structures.\n * @returns {boolean} - Boolean indicating if the affected property on the object has changed.\n *\n * @example\n * import { createProxy, isChanged } from 'proxy-compare';\n *\n * const obj = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(obj, affected);\n *\n * proxy.a\n *\n * isChanged(obj, { a: \"1\" }, affected) // false\n *\n * proxy.a = \"2\"\n *\n * isChanged(obj, { a: \"1\" }, affected) // true\n */\n\nexport const isChanged = (\n  prevObj: unknown,\n  nextObj: unknown,\n  affected: WeakMap<object, unknown>,\n  cache?: WeakMap<object, unknown>,\n): boolean => {\n  if (Object.is(prevObj, nextObj)) {\n    return false;\n  }\n  if (!isObject(prevObj) || !isObject(nextObj)) return true;\n  const used = (affected as Affected).get(getOriginalObject(prevObj));\n  if (!used) return true;\n  if (cache) {\n    const hit = (cache as ChangedCache).get(prevObj);\n    if (hit && hit[NEXT_OBJECT_PROPERTY] === nextObj) {\n      return hit[CHANGED_PROPERTY];\n    }\n    // for object with cycles\n    (cache as ChangedCache).set(prevObj, {\n      [NEXT_OBJECT_PROPERTY]: nextObj,\n      [CHANGED_PROPERTY]: false,\n    });\n  }\n  let changed: boolean | null = null;\n  try {\n    for (const key of used[HAS_KEY_PROPERTY] || []) {\n      changed = Reflect.has(prevObj, key) !== Reflect.has(nextObj, key);\n      if (changed) return changed;\n    }\n    if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n      changed = isAllOwnKeysChanged(prevObj, nextObj);\n      if (changed) return changed;\n    } else {\n      for (const key of used[HAS_OWN_KEY_PROPERTY] || []) {\n        const hasPrev = !!Reflect.getOwnPropertyDescriptor(prevObj, key);\n        const hasNext = !!Reflect.getOwnPropertyDescriptor(nextObj, key);\n        changed = hasPrev !== hasNext;\n        if (changed) return changed;\n      }\n    }\n    for (const key of used[KEYS_PROPERTY] || []) {\n      changed = isChanged(\n        (prevObj as any)[key],\n        (nextObj as any)[key],\n        affected,\n        cache,\n      );\n      if (changed) return changed;\n    }\n    if (changed === null) changed = true;\n    return changed;\n  } finally {\n    if (cache) {\n      cache.set(prevObj, {\n        [NEXT_OBJECT_PROPERTY]: nextObj,\n        [CHANGED_PROPERTY]: changed,\n      });\n    }\n  }\n};\n\n// explicitly track object with memo\nexport const trackMemo = (obj: unknown) => {\n  if (isObjectToTrack(obj)) {\n    return TRACK_MEMO_SYMBOL in obj;\n  }\n  return false;\n};\n\n/**\n * Unwrap proxy to get the original object.\n *\n * Used to retrieve the original object used to create the proxy instance with `createProxy`.\n *\n * @param {Proxy<object>} obj -  The proxy wrapper of the originial object.\n * @returns {object | null} - Return either the unwrapped object if exists.\n *\n * @example\n * import { createProxy, getUntracked } from 'proxy-compare';\n *\n * const original = { a: \"1\", c: \"2\", d: { e: \"3\" } };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n * const originalFromProxy = getUntracked(proxy)\n *\n * Object.is(original, originalFromProxy) // true\n * isChanged(original, originalFromProxy, affected) // false\n */\nexport const getUntracked = <T>(obj: T): T | null => {\n  if (isObjectToTrack(obj)) {\n    return (obj as { [GET_ORIGINAL_SYMBOL]?: T })[GET_ORIGINAL_SYMBOL] || null;\n  }\n  return null;\n};\n\n/**\n * Mark object to be tracked.\n *\n * This function marks an object that will be passed into `createProxy`\n * as marked to track or not. By default only Array and Object are marked to track,\n * so this is useful for example to mark a class instance to track or to mark a object\n * to be untracked when creating your proxy.\n *\n * @param obj - Object to mark as tracked or not.\n * @param mark - Boolean indicating whether you want to track this object or not.\n * @returns - No return.\n *\n * @example\n * import { createProxy, markToTrack, isChanged } from 'proxy-compare';\n *\n * const nested = { e: \"3\" }\n *\n * markToTrack(nested, false)\n *\n * const original = { a: \"1\", c: \"2\", d: nested };\n * const affected = new WeakMap();\n *\n * const proxy = createProxy(original, affected);\n *\n * proxy.d.e\n *\n * isChanged(original, { d: { e: \"3\" } }, affected) // true\n */\nexport const markToTrack = (obj: object, mark = true) => {\n  objectsToTrack.set(obj, mark);\n};\n\n/**\n * Convert `affected` to path list\n *\n * `affected` is a weak map which is not printable.\n * This function is can convert it to printable path list.\n * It's for debugging purpose.\n *\n * @param obj - An object that is used with `createProxy`.\n * @param affected - A weak map that is used with `createProxy`.\n * @param onlyWithValues - An optional boolean to exclude object getters.\n * @returns - An array of paths.\n */\nexport const affectedToPathList = (\n  obj: unknown,\n  affected: WeakMap<object, unknown>,\n  onlyWithValues?: boolean,\n) => {\n  const list: (string | symbol)[][] = [];\n  const seen = new WeakSet();\n  const walk = (x: unknown, path?: (string | symbol)[]) => {\n    if (seen.has(x as object)) {\n      // for object with cycles\n      return;\n    }\n    if (isObject(x)) {\n      seen.add(x);\n    }\n    const used = isObject(x) && (affected as Affected).get(getOriginalObject(x));\n    if (used) {\n      used[HAS_KEY_PROPERTY]?.forEach((key) => {\n        const segment = `:has(${String(key)})`;\n        list.push(path ? [...path, segment] : [segment]);\n      });\n      if (used[ALL_OWN_KEYS_PROPERTY] === true) {\n        const segment = ':ownKeys';\n        list.push(path ? [...path, segment] : [segment]);\n      } else {\n        used[HAS_OWN_KEY_PROPERTY]?.forEach((key) => {\n          const segment = `:hasOwn(${String(key)})`;\n          list.push(path ? [...path, segment] : [segment]);\n        });\n      }\n      used[KEYS_PROPERTY]?.forEach((key) => {\n        if (!onlyWithValues || 'value' in (Object.getOwnPropertyDescriptor(x, key) || {})) {\n          walk((x as any)[key], path ? [...path, key] : [key]);\n        }\n      });\n    } else if (path) {\n      list.push(path);\n    }\n  };\n  walk(obj);\n  return list;\n};\n\n/**\n * replace newProxy function.\n *\n * This can be used if you want to use proxy-polyfill.\n * Note that proxy-polyfill can't polyfill everything.\n * Use it at your own risk.\n */\nexport const replaceNewProxy = (fn: typeof newProxy) => {\n  newProxy = fn;\n};\n","import { markToTrack, getUntracked } from 'proxy-compare';\n\nconst isObject = (x) => typeof x === \"object\" && x !== null;\nconst proxyStateMap = /* @__PURE__ */ new WeakMap();\nconst refSet = /* @__PURE__ */ new WeakSet();\nconst buildProxyFunction = (objectIs = Object.is, newProxy = (target, handler) => new Proxy(target, handler), canProxy = (x) => isObject(x) && !refSet.has(x) && (Array.isArray(x) || !(Symbol.iterator in x)) && !(x instanceof WeakMap) && !(x instanceof WeakSet) && !(x instanceof Error) && !(x instanceof Number) && !(x instanceof Date) && !(x instanceof String) && !(x instanceof RegExp) && !(x instanceof ArrayBuffer), defaultHandlePromise = (promise) => {\n  switch (promise.status) {\n    case \"fulfilled\":\n      return promise.value;\n    case \"rejected\":\n      throw promise.reason;\n    default:\n      throw promise;\n  }\n}, snapCache = /* @__PURE__ */ new WeakMap(), createSnapshot = (target, version, handlePromise = defaultHandlePromise) => {\n  const cache = snapCache.get(target);\n  if ((cache == null ? void 0 : cache[0]) === version) {\n    return cache[1];\n  }\n  const snap = Array.isArray(target) ? [] : Object.create(Object.getPrototypeOf(target));\n  markToTrack(snap, true);\n  snapCache.set(target, [version, snap]);\n  Reflect.ownKeys(target).forEach((key) => {\n    if (Object.getOwnPropertyDescriptor(snap, key)) {\n      return;\n    }\n    const value = Reflect.get(target, key);\n    const desc = {\n      value,\n      enumerable: true,\n      // This is intentional to avoid copying with proxy-compare.\n      // It's still non-writable, so it avoids assigning a value.\n      configurable: true\n    };\n    if (refSet.has(value)) {\n      markToTrack(value, false);\n    } else if (value instanceof Promise) {\n      delete desc.value;\n      desc.get = () => handlePromise(value);\n    } else if (proxyStateMap.has(value)) {\n      const [target2, ensureVersion] = proxyStateMap.get(\n        value\n      );\n      desc.value = createSnapshot(\n        target2,\n        ensureVersion(),\n        handlePromise\n      );\n    }\n    Object.defineProperty(snap, key, desc);\n  });\n  return snap;\n}, proxyCache = /* @__PURE__ */ new WeakMap(), versionHolder = [1, 1], proxyFunction = (initialObject) => {\n  if (!isObject(initialObject)) {\n    throw new Error(\"object required\");\n  }\n  const found = proxyCache.get(initialObject);\n  if (found) {\n    return found;\n  }\n  let version = versionHolder[0];\n  const listeners = /* @__PURE__ */ new Set();\n  const notifyUpdate = (op, nextVersion = ++versionHolder[0]) => {\n    if (version !== nextVersion) {\n      version = nextVersion;\n      listeners.forEach((listener) => listener(op, nextVersion));\n    }\n  };\n  let checkVersion = versionHolder[1];\n  const ensureVersion = (nextCheckVersion = ++versionHolder[1]) => {\n    if (checkVersion !== nextCheckVersion && !listeners.size) {\n      checkVersion = nextCheckVersion;\n      propProxyStates.forEach(([propProxyState]) => {\n        const propVersion = propProxyState[1](nextCheckVersion);\n        if (propVersion > version) {\n          version = propVersion;\n        }\n      });\n    }\n    return version;\n  };\n  const createPropListener = (prop) => (op, nextVersion) => {\n    const newOp = [...op];\n    newOp[1] = [prop, ...newOp[1]];\n    notifyUpdate(newOp, nextVersion);\n  };\n  const propProxyStates = /* @__PURE__ */ new Map();\n  const addPropListener = (prop, propProxyState) => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && propProxyStates.has(prop)) {\n      throw new Error(\"prop listener already exists\");\n    }\n    if (listeners.size) {\n      const remove = propProxyState[3](createPropListener(prop));\n      propProxyStates.set(prop, [propProxyState, remove]);\n    } else {\n      propProxyStates.set(prop, [propProxyState]);\n    }\n  };\n  const removePropListener = (prop) => {\n    var _a;\n    const entry = propProxyStates.get(prop);\n    if (entry) {\n      propProxyStates.delete(prop);\n      (_a = entry[1]) == null ? void 0 : _a.call(entry);\n    }\n  };\n  const addListener = (listener) => {\n    listeners.add(listener);\n    if (listeners.size === 1) {\n      propProxyStates.forEach(([propProxyState, prevRemove], prop) => {\n        if ((import.meta.env && import.meta.env.MODE) !== \"production\" && prevRemove) {\n          throw new Error(\"remove already exists\");\n        }\n        const remove = propProxyState[3](createPropListener(prop));\n        propProxyStates.set(prop, [propProxyState, remove]);\n      });\n    }\n    const removeListener = () => {\n      listeners.delete(listener);\n      if (listeners.size === 0) {\n        propProxyStates.forEach(([propProxyState, remove], prop) => {\n          if (remove) {\n            remove();\n            propProxyStates.set(prop, [propProxyState]);\n          }\n        });\n      }\n    };\n    return removeListener;\n  };\n  const baseObject = Array.isArray(initialObject) ? [] : Object.create(Object.getPrototypeOf(initialObject));\n  const handler = {\n    deleteProperty(target, prop) {\n      const prevValue = Reflect.get(target, prop);\n      removePropListener(prop);\n      const deleted = Reflect.deleteProperty(target, prop);\n      if (deleted) {\n        notifyUpdate([\"delete\", [prop], prevValue]);\n      }\n      return deleted;\n    },\n    set(target, prop, value, receiver) {\n      const hasPrevValue = Reflect.has(target, prop);\n      const prevValue = Reflect.get(target, prop, receiver);\n      if (hasPrevValue && (objectIs(prevValue, value) || proxyCache.has(value) && objectIs(prevValue, proxyCache.get(value)))) {\n        return true;\n      }\n      removePropListener(prop);\n      if (isObject(value)) {\n        value = getUntracked(value) || value;\n      }\n      let nextValue = value;\n      if (value instanceof Promise) {\n        value.then((v) => {\n          value.status = \"fulfilled\";\n          value.value = v;\n          notifyUpdate([\"resolve\", [prop], v]);\n        }).catch((e) => {\n          value.status = \"rejected\";\n          value.reason = e;\n          notifyUpdate([\"reject\", [prop], e]);\n        });\n      } else {\n        if (!proxyStateMap.has(value) && canProxy(value)) {\n          nextValue = proxyFunction(value);\n        }\n        const childProxyState = !refSet.has(nextValue) && proxyStateMap.get(nextValue);\n        if (childProxyState) {\n          addPropListener(prop, childProxyState);\n        }\n      }\n      Reflect.set(target, prop, nextValue, receiver);\n      notifyUpdate([\"set\", [prop], value, prevValue]);\n      return true;\n    }\n  };\n  const proxyObject = newProxy(baseObject, handler);\n  proxyCache.set(initialObject, proxyObject);\n  const proxyState = [\n    baseObject,\n    ensureVersion,\n    createSnapshot,\n    addListener\n  ];\n  proxyStateMap.set(proxyObject, proxyState);\n  Reflect.ownKeys(initialObject).forEach((key) => {\n    const desc = Object.getOwnPropertyDescriptor(\n      initialObject,\n      key\n    );\n    if (\"value\" in desc) {\n      proxyObject[key] = initialObject[key];\n      delete desc.value;\n      delete desc.writable;\n    }\n    Object.defineProperty(baseObject, key, desc);\n  });\n  return proxyObject;\n}) => [\n  // public functions\n  proxyFunction,\n  // shared state\n  proxyStateMap,\n  refSet,\n  // internal things\n  objectIs,\n  newProxy,\n  canProxy,\n  defaultHandlePromise,\n  snapCache,\n  createSnapshot,\n  proxyCache,\n  versionHolder\n];\nconst [defaultProxyFunction] = buildProxyFunction();\nfunction proxy(initialObject = {}) {\n  return defaultProxyFunction(initialObject);\n}\nfunction getVersion(proxyObject) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  return proxyState == null ? void 0 : proxyState[1]();\n}\nfunction subscribe(proxyObject, callback, notifyInSync) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  let promise;\n  const ops = [];\n  const addListener = proxyState[3];\n  let isListenerActive = false;\n  const listener = (op) => {\n    ops.push(op);\n    if (notifyInSync) {\n      callback(ops.splice(0));\n      return;\n    }\n    if (!promise) {\n      promise = Promise.resolve().then(() => {\n        promise = void 0;\n        if (isListenerActive) {\n          callback(ops.splice(0));\n        }\n      });\n    }\n  };\n  const removeListener = addListener(listener);\n  isListenerActive = true;\n  return () => {\n    isListenerActive = false;\n    removeListener();\n  };\n}\nfunction snapshot(proxyObject, handlePromise) {\n  const proxyState = proxyStateMap.get(proxyObject);\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && !proxyState) {\n    console.warn(\"Please use proxy object\");\n  }\n  const [target, ensureVersion, createSnapshot] = proxyState;\n  return createSnapshot(target, ensureVersion(), handlePromise);\n}\nfunction ref(obj) {\n  refSet.add(obj);\n  return obj;\n}\nconst unstable_buildProxyFunction = buildProxyFunction;\n\nexport { getVersion, proxy, ref, snapshot, subscribe, unstable_buildProxyFunction };\n","import type { ClientCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nlet client: ClientCtrlState['ethereumClient'] = undefined\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  ethereumClient: undefined,\n\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    client = ethereumClient\n  },\n\n  client() {\n    if (client) {\n      return client\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      const address = profileAddress ?? state.address\n      const { id } = ClientCtrl.client().getDefaultChain()\n      if (address && id === 1) {\n        const [name, avatar] = await Promise.all([\n          ClientCtrl.client().fetchEnsName({ address, chainId: 1 }),\n          ClientCtrl.client().fetchEnsAvatar({ address, chainId: 1 })\n        ])\n        if (avatar) {\n          await preloadAvatarFn(avatar)\n        }\n        state.profileName = name\n        state.profileAvatar = avatar\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  standaloneChains: undefined,\n  standaloneUri: undefined,\n  isStandalone: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  walletConnectVersion: 1\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setStandaloneChains(standaloneChains: OptionsCtrlState['standaloneChains']) {\n    state.standaloneChains = standaloneChains\n  },\n\n  setStandaloneUri(standaloneUri: OptionsCtrlState['standaloneUri']) {\n    state.standaloneUri = standaloneUri\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsStandalone(isStandalone: OptionsCtrlState['isStandalone']) {\n    state.isStandalone = isStandalone\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setWalletConnectVersion(walletConnectVersion: OptionsCtrlState['walletConnectVersion']) {\n    state.walletConnectVersion = walletConnectVersion\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  standaloneChains: undefined,\n  enableStandaloneMode: false,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerAllowList: undefined,\n  explorerDenyList: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    OptionsCtrl.setStandaloneChains(config.standaloneChains)\n    OptionsCtrl.setIsStandalone(\n      Boolean(config.standaloneChains?.length) || Boolean(config.enableStandaloneMode)\n    )\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setWalletConnectVersion(config.walletConnectVersion ?? 1)\n\n    if (!OptionsCtrl.state.isStandalone) {\n      const chain = ClientCtrl.client().getDefaultChain()\n      OptionsCtrl.setSelectedChain(chain)\n      OptionsCtrl.setChains(ClientCtrl.client().chains)\n    }\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    }\n\n    Object.assign(state, config)\n  }\n}\n","import type { ListingResponse, PageParams } from '../types/controllerTypes'\n\nconst EXPLORER_API = 'https://explorer-api.walletconnect.com'\n\nfunction formatParams(params: PageParams) {\n  const stringParams = Object.fromEntries(\n    Object.entries(params)\n      .filter(([_, value]) => typeof value !== 'undefined' && value !== null && value !== '')\n      .map(([key, value]) => [key, value.toString()])\n  )\n\n  return new URLSearchParams(stringParams).toString()\n}\n\nexport const ExplorerUtil = {\n  async fetchWallets(projectId: string, params: PageParams): Promise<ListingResponse> {\n    const urlParams = formatParams(params)\n    const fetcUrl = `${EXPLORER_API}/v3/wallets?projectId=${projectId}&${urlParams}`\n    const fetched = await fetch(fetcUrl)\n\n    return fetched.json()\n  },\n\n  formatImageUrl(projectId: string, imageId: string) {\n    return `${EXPLORER_API}/v3/logo/lg/${imageId}?projectId=${projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, PageParams } from '../types/controllerTypes'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  previewWallets: [],\n  recomendedWallets: []\n})\n\n// -- helpers ------------------------------------------------------ //\nfunction getProjectId() {\n  const { projectId } = ConfigCtrl.state\n  if (!projectId) {\n    throw new Error('projectId is required to work with explorer api')\n  }\n\n  return projectId\n}\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getPreviewWallets(params: PageParams) {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    state.previewWallets = Object.values(listings)\n\n    return state.previewWallets\n  },\n\n  async getRecomendedWallets() {\n    const { listings } = await ExplorerUtil.fetchWallets(getProjectId(), { page: 1, entries: 6 })\n    state.recomendedWallets = Object.values(listings)\n  },\n\n  async getPaginatedWallets(params: PageParams) {\n    const { page, search } = params\n    const { listings: listingsObj, total } = await ExplorerUtil.fetchWallets(getProjectId(), params)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getImageUrl(imageId: string) {\n    return ExplorerUtil.formatImageUrl(getProjectId(), imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri?: string\n  standaloneChains?: string[]\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isStandalone, isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n\n      if (isStandalone) {\n        OptionsCtrl.setStandaloneUri(options?.uri)\n        OptionsCtrl.setStandaloneChains(options?.standaloneChains)\n        RouterCtrl.replace('ConnectWallet')\n      } else if (options?.route) {\n        RouterCtrl.replace(options.route)\n      } else if (isConnected) {\n        RouterCtrl.replace('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.replace('SelectNetwork')\n      } else {\n        RouterCtrl.replace('ConnectWallet')\n      }\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          if (OptionsCtrl.state.isUiLoaded && OptionsCtrl.state.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","export const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isEmptyObject(value: unknown) {\n    return (\n      Object.getPrototypeOf(value) === Object.prototype &&\n      Object.getOwnPropertyNames(value).length === 0 &&\n      Object.getOwnPropertySymbols(value).length === 0\n    )\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let plainAppUrl = appUrl\n    if (appUrl.endsWith('/')) {\n      plainAppUrl = appUrl.slice(0, -1)\n    }\n    this.setWalletConnectDeepLink(plainAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${plainAppUrl}/wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    const [href] = wcUri.split('?')\n\n    localStorage.setItem(\n      CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n      JSON.stringify({ href, name: 'Android' })\n    )\n  },\n\n  removeWalletConnectDeepLink() {\n    localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n  },\n\n  isNull<T>(value: T | null): value is null {\n    return value === null\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { Buffer } from 'buffer'\n\nif (typeof window !== 'undefined') {\n  if (!window.Buffer) {\n    window.Buffer = Buffer\n  }\n  if (!window.global) {\n    window.global = window\n  }\n  if (!window.process) {\n    // @ts-expect-error minimal process\n    window.process = { env: {} }\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@web3modal/core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@web3modal/core'\n\n/**\n * Types\n */\ntype Web3ModalConfig = Omit<ConfigCtrlState, 'enableStandaloneMode'> &\n  ThemeCtrlState & {\n    walletConnectVersion: 1 | 2\n  }\n\n/**\n * Client\n */\nexport class Web3Modal {\n  public constructor(config: Web3ModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig({ enableStandaloneMode: true, ...config })\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@web3modal/ui')\n      const modal = document.createElement('w3m-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["t","Symbol","s","Object","getPrototypeOf","c","WeakMap","l","e","has","get","prototype","Array","h","arguments","length","undefined","set","isObject","x","proxyStateMap","refSet","WeakSet","buildProxyFunction","objectIs","is","newProxy","target","handler","Proxy","canProxy","isArray","iterator","Error","Number","Date","String","RegExp","ArrayBuffer","defaultHandlePromise","promise","status","value","reason","snapCache","createSnapshot","version","handlePromise","cache","snap","create","markToTrack","Reflect","ownKeys","forEach","key","getOwnPropertyDescriptor","desc","enumerable","configurable","Promise","_proxyStateMap$get","_proxyStateMap$get2","_slicedToArray","target2","ensureVersion","defineProperty","proxyCache","versionHolder","proxyFunction","initialObject","found","listeners","Set","notifyUpdate","op","nextVersion","listener","checkVersion","createPropListener","prop","newOp","_toConsumableArray","concat","propProxyStates","Map","removePropListener","_a","entry","delete","call","baseObject","deleteProperty","prevValue","deleted","receiver","hasPrevValue","getUntracked","nextValue","then","v","catch","childProxyState","propProxyState","size","remove","addPropListener","proxyObject","proxyState","nextCheckVersion","_ref","propVersion","add","_ref3","_ref4","_ref5","_ref6","writable","_buildProxyFunction","defaultProxyFunction","proxy","subscribe","callback","notifyInSync","console","warn","ops","addListener","isListenerActive","removeListener","push","splice","resolve","L","d","ethereumClient","setEthereumClient","client","p","address","profileName","profileAvatar","profileLoading","balanceLoading","balance","isConnected","A","state","C","getAccount","fetchProfile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","n","_d$client$getDefaultC","a","_yield$Promise$all","_yield$Promise$all2","wrap","_context","prev","next","getDefaultChain","id","all","fetchEnsName","chainId","fetchEnsAvatar","sent","t0","finish","stop","fetchBalance","_callee2","_context2","amount","formatted","symbol","setAddress","setIsConnected","resetBalance","resetAccount","o","selectedChain","chains","standaloneChains","standaloneUri","isStandalone","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","walletConnectVersion","i","setChains","setStandaloneChains","setStandaloneUri","getSelectedChain","getNetwork","chain","setSelectedChain","setIsStandalone","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setWalletConnectVersion","b","projectId","mobileWallets","desktopWallets","walletImages","chainImages","tokenImages","enableStandaloneMode","enableNetworkView","enableAccountView","enableExplorer","defaultChain","explorerAllowList","explorerDenyList","termsOfServiceUrl","privacyPolicyUrl","S","setConfig","assign","E","D","fromEntries","entries","filter","_ref2","map","toString","URLSearchParams","y","_callee3","_context3","fetch","abrupt","json","u","wallets","listings","total","page","search","previewWallets","recomendedWallets","I","_","getPreviewWallets","_callee4","_yield$y$fetchWallets","_context4","values","getRecomendedWallets","_callee5","_yield$y$fetchWallets2","_context5","getPaginatedWallets","_callee6","_yield$y$fetchWallets3","_context6","getImageUrl","resetSearch","r","history","view","data","w","replace","goBack","pop","_r$history$slice","slice","f","open","_callee7","_context7","_i$state","uri","route","N","setInterval","clearInterval","close","P","O","getOwnPropertySymbols","j","hasOwnProperty","k","propertyIsEnumerable","W","g","themeMode","matchMedia","matches","B","setThemeConfig","themeVariables","_step","_iterator","_createForOfIteratorHelper","done","err","$","message","variant","H","openToast","closeToast","m","WALLETCONNECT_DEEPLINK_CHOICE","isMobile","window","test","navigator","userAgent","isAndroid","toLowerCase","includes","isEmptyObject","getOwnPropertyNames","isHttpUrl","startsWith","formatNativeUrl","this","formatUniversalUrl","replaceAll","setWalletConnectDeepLink","encodeURIComponent","endsWith","wait","_callee8","_context8","setTimeout","openHref","localStorage","setItem","JSON","stringify","href","name","setWalletConnectAndroidDeepLink","_e$split","split","removeWalletConnectDeepLink","removeItem","isNull","Buffer","U","global","process","env","_classCallCheck","openModal","closeModal","subscribeModal","setTheme","initUi","_createClass","_initUi","document","createElement","body","insertAdjacentElement","apply"],"sourceRoot":""}